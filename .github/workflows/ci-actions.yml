name: Quarkus CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - 'docs/src/main/asciidoc/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '.github/*.java'
      - '.github/*.conf'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - 'docs/src/main/asciidoc/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '.github/*.java'
      - '.github/*.conf'

env:
  # Workaround testsuite locale issue
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_OPTS: "-B --settings .github/mvn-settings.xml --fail-at-end -Dquarkus.native.container-build=true -Dtest-containers -Dstart-containers -Dnative-image.xmx=5g -Dnative -Dnative.surefire.skip -Dformat.skip -Dno-descriptor-tests install -DskipDocs"
  JVM_TEST_MAVEN_OPTS: "-e -B --settings .github/mvn-settings.xml -Dtest-containers -Dstart-containers -Dformat.skip -DskipDocs"
  DB_USER: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_NAME: hibernate_orm_test
jobs:
  ci-sanity-check:
    name: "CI Sanity Check"
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    steps:
      - name: Build
        run: sleep 30
  build-jdk11:
    name: "Initial JDK 11 Build"
    runs-on: ubuntu-latest
    # Skip master in forks
    # Skip draft PRs and those with WIP in the subject, rerun as soon as its removed
    if: "(github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')) && ( \
           github.event_name != 'pull_request' || ( \
             github.event.pull_request.draft == false && \
             github.event.pull_request.state != 'closed' && \
             contains(github.event.pull_request.title, 'wip ') == false && \
             contains(github.event.pull_request.title, '[wip]') == false && \
             (
               github.event.action != 'edited' || \
               contains(github.event.changes.title.from, 'wip ') || \
               contains(github.event.changes.title.from, '[wip]') \
             ) \
           ) \
         )"
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Set up JDK 11
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: 11
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash
      - name: Cache Maven Repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          # refresh cache every month to avoid unlimited growth
          key: q2maven-${{ steps.get-date.outputs.date }}
      - name: Build
        run: |
          mvn -T1C -e -B -DskipTests -DskipITs -Dinvoker.skip -Dno-format -Dincremental -Dgib.disable clean install
      - name: Verify extension dependencies
        shell: bash
        run: |
          ./update-extension-dependencies.sh
          if [ `git status -s -u no '*pom.xml' | wc -l` -ne 0 ]
          then
            echo -e '\033[0;31mError:\033[0m Dependencies to extension artifacts are outdated! Run ./update-extension-dependencies.sh and add the modified pom.xml files to your commit.' 1>&2
            exit 1
          fi
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
      - name: Delete Local Artifacts From Cache
        shell: bash
        run: rm -r ~/.m2/repository/io/quarkus
      - name: Get GIB arguments
        id: get-gib-args
        env:
          PULL_REQUEST_BASE: ${{ github.event.pull_request.base.sha }}
        run: |
          # See also: https://github.com/vackosar/gitflow-incremental-builder#configuration
          # Common GIB_ARGS for all CI cases (hint: see also pom.xml):
          # - disableSelectedProjectsHandling: required to detect changes in jobs that use -pl
          # - untracked: to ignore files created by jobs (and uncommitted to be consistent)
          # - forces build of quarkus-core.* (see https://github.com/quarkusio/quarkus/pull/13543#issuecomment-735955489)
          # - forces build of resteasy-reactive (see https://github.com/quarkusio/quarkus/pull/13243#issuecomment-735433991)
          GIB_ARGS="-Dincremental -Dgib.disableSelectedProjectsHandling -Dgib.untracked=false -Dgib.uncommitted=false"
          if [ -n "$PULL_REQUEST_BASE" ]
          then
              # The PR defines a clear merge target so just use that branch for reference, *unless*
              # - the current branch is a backport branch
              GIB_ARGS+=" -Dgib.referenceBranch=$PULL_REQUEST_BASE -Dgib.disableIfBranchRegex='.*backport.*'"
          else
              # No PR means the merge target is uncertain so fetch & use master of quarkusio/quarkus, *unless*:
              # - the current branch is master or some released branch like 1.10 (TODO: introduce tags to use as reference)
              # - the current branch is a backport branch targeting some released branch like 1.10 (merge target is not master)
              GIB_ARGS+=" -Dgib.referenceBranch=refs/remotes/quarkusio/master -Dgib.fetchReferenceBranch -Dgib.disableIfBranchRegex='master|\d+\.\d+|.*backport.*'"
          fi
          echo "GIB_ARGS: $GIB_ARGS"
          echo "::set-output name=gib_args::${GIB_ARGS}"
    outputs:
      gib_args: ${{ steps.get-gib-args.outputs.gib_args }}

  linux-jvm-tests:
    name: JVM Tests - JDK ${{matrix.java.name}}
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 240
    env:
      MAVEN_OPTS: -Xmx2048m -XX:MaxMetaspaceSize=1000m
    strategy:
      fail-fast: false
      matrix:
        java :
          #- { name: "8",
          #    java-version: 8,
          #    maven_args: "-pl !integration-tests/kubernetes/quarkus-standard-way"
          #}
          - {
            name: "11",
            java-version: 11,
            maven_args: ""
          }
          #- {
          #  name: "15",
          #  java-version: 15,
          #  maven_args: "-pl !integration-tests/kubernetes/quarkus-standard-way"
          #}

    steps:
      - name: Stop mysql
        shell: bash
        run: |
          netstat -ln
          sudo service mysql stop || true

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Add quarkusio remote
        shell: bash
        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git

      - name: apt clean
        shell: bash
        run: sudo apt-get clean

      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh

      - name: Set up JDK ${{ matrix.java.name }}
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java.java-version }}
          release: ${{ matrix.java.release }}

      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn $JVM_TEST_MAVEN_OPTS install -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools ${{ matrix.java.maven_args }} ${{ needs.build-jdk11.outputs.gib_args }}
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: test-reports-linux-jvm${{matrix.java.name}}
          path: 'test-reports.tgz'

#  windows-jdk11-jvm-tests:
#    name: JVM Tests - JDK 11 Windows
#    runs-on: windows-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 180
#    env:
#      MAVEN_OPTS: -Xmx1408m  -XX:MaxMetaspaceSize=1000m
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Build with Maven
#        shell: bash
#        run: mvn -B --settings .github/mvn-settings.xml -DskipDocs -Dno-native -Dformat.skip -pl !integration-tests/gradle -pl !integration-tests/maven -pl !integration-tests/devtools install ${{ needs.build-jdk11.outputs.gib_args }}
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: |
#          # Disambiguate windows find from cygwin find
#          /usr/bin/find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-windows-jdk11-jvm
#          path: 'test-reports.tgz'
#
#  linux-jvm-maven-tests:
#    name: Maven Tests - JDK ${{matrix.java.name}}
#    runs-on: ubuntu-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 60
#    strategy:
#      fail-fast: false
#      matrix:
#        java:
#          - {
#            name: "11",
#            java-version: 11
#          }
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Set up JDK ${{ matrix.java.name }}
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: ${{ matrix.java.java-version }}
#      - name: Run Maven integration tests
#        run: mvn $JVM_TEST_MAVEN_OPTS install -pl 'integration-tests/maven' ${{ needs.build-jdk11.outputs.gib_args }}
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-linux-maven-java${{matrix.java.name}}
#          path: 'test-reports.tgz'
#
#  windows-jdk11-jvm-maven-tests:
#    name: Maven Tests - JDK 11 Windows
#    runs-on: windows-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 60
#    strategy:
#      fail-fast: false
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Run Maven integration tests
#        shell: bash
#        run: mvn $JVM_TEST_MAVEN_OPTS install -pl 'integration-tests/maven' ${{ needs.build-jdk11.outputs.gib_args }}
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-windows-maven-java11
#          path: 'test-reports.tgz'
#
#  linux-jvm-gradle-tests:
#    name: Gradle Tests - JDK ${{matrix.java.name}}
#    runs-on: ubuntu-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 60
#    strategy:
#      fail-fast: false
#      matrix:
#        java:
#         - {
#            name: "11",
#            java-version: 11
#          }
#    steps:
#      - uses: actions/checkout@v2
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Set up JDK ${{ matrix.java.name }}
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: ${{ matrix.java.java-version }}
#      - name: Build with Gradle
#        uses: eskatos/gradle-command-action@v1
#        env:
#          GRADLE_OPTS: -Xmx1408m
#        with:
#          gradle-version: wrapper
#          wrapper-directory: integration-tests/gradle
#          build-root-directory: integration-tests/gradle
#          arguments: clean test -i -S --stacktrace --no-daemon
#
#  windows-jdk11-jvm-gradle-tests:
#    name: Gradle Tests - JDK 11 Windows
#    needs: build-jdk11
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    runs-on: windows-latest
#    timeout-minutes: 80
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Build with Gradle
#        uses: eskatos/gradle-command-action@v1
#        timeout-minutes: 60
#        env:
#          GRADLE_OPTS: -Xmx1408m
#        with:
#          gradle-version: wrapper
#          wrapper-directory: integration-tests/gradle
#          build-root-directory: integration-tests/gradle
#          arguments: clean test -i -S --stacktrace --no-daemon
#
#  linux-jvm-devtools-tests:
#    name: Devtools Tests - JDK ${{matrix.java.name}}
#    runs-on: ubuntu-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 60
#    strategy:
#      fail-fast: false
#      matrix:
#        java:
#          - {
#            name: "11",
#            java-version: 11
#          }
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Set up JDK ${{ matrix.java.name }}
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: ${{ matrix.java.java-version }}
#      - name: Run Devtools integration tests
#        run: mvn $JVM_TEST_MAVEN_OPTS install -pl 'integration-tests/devtools' ${{ needs.build-jdk11.outputs.gib_args }}
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-linux-devtools-java${{matrix.java.name}}
#          path: 'test-reports.tgz'
#
#  windows-jdk11-jvm-devtools-tests:
#    name: Devtools Tests - JDK 11 Windows
#    runs-on: windows-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    needs: build-jdk11
#    timeout-minutes: 60
#    strategy:
#      fail-fast: false
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Run Devtools integration tests
#        shell: bash
#        run: mvn $JVM_TEST_MAVEN_OPTS install -pl 'integration-tests/devtools' ${{ needs.build-jdk11.outputs.gib_args }}
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-windows-devtools-java11
#          path: 'test-reports.tgz'
#
#  tcks-test:
#    name: MicroProfile TCKs Tests
#    needs: build-jdk11
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    runs-on: ubuntu-latest
#    timeout-minutes: 150
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          path: tcks
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#        working-directory: ./tcks
#      - name: Download Quarkus REST Testsuite
#        uses: actions/checkout@v2
#        with:
#          repository: quarkusio/quarkus-rest-testsuite
#          path: quarkus-rest-testsuite
#      - name: Reclaim Disk Space
#        run: .github/ci-prerequisites.sh
#        working-directory: ./tcks
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Run Quarkus REST TCK
#        # Note: No gib_args here because quarkus-rest-testsuite is a different repo
#        run: mvn -B --settings ../tcks/.github/mvn-settings.xml install
#        working-directory: ./quarkus-rest-testsuite
#      - name: Build with Maven
#        run: mvn -B --settings .github/mvn-settings.xml -Dno-native -Dno-format -DskipTests -Dtcks install ${{ needs.build-jdk11.outputs.gib_args }}
#        working-directory: ./tcks
#      - name: Verify with Maven
#        run: mvn -B --settings .github/mvn-settings.xml -Dtcks -pl tcks -amd verify ${{ needs.build-jdk11.outputs.gib_args }}
#        working-directory: ./tcks
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-tcks
#          path: 'test-reports.tgz'
#
#  native-tests-read-json-matrix:
#    name: Native Tests - Read JSON matrix
#    runs-on: ubuntu-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    outputs:
#      matrix: ${{ steps.read.outputs.matrix }}
#    steps:
#      - uses: actions/checkout@v2
#      - id: read
#        run: |
#          json=$(tr -d '\n' < .github/native-tests.json )
#          echo $json
#          echo "::set-output name=matrix::${json}"
#
#  native-tests:
#    name: Native Tests - ${{matrix.category}}
#    needs: [build-jdk11, native-tests-read-json-matrix]
#    runs-on: ubuntu-latest
#    # Skip master in forks
#    if: "github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/master')"
#    # Ignore the following YAML Schema error
#    timeout-minutes: ${{matrix.timeout}}
#    strategy:
#      max-parallel: 8
#      fail-fast: false
#      matrix: ${{ fromJson(needs.native-tests-read-json-matrix.outputs.matrix) }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Add quarkusio remote
#        shell: bash
#        run: git remote add quarkusio https://github.com/quarkusio/quarkus.git
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
#        with:
#          java-version: 11
#      - name: Reclaim Disk Space
#        run: .github/ci-prerequisites.sh
#      - name: Download Maven Repo
#        uses: actions/download-artifact@v1
#        with:
#          name: maven-repo
#          path: .
#      - name: Extract Maven Repo
#        shell: bash
#        run: tar -xzf maven-repo.tgz -C ~
#      - name: Build with Maven
#        env:
#          TEST_MODULES: ${{matrix.test-modules}}
#          CATEGORY: ${{matrix.category}}
#        run: |
#          for i in $TEST_MODULES
#          do modules+="integration-tests/$i,"; done
#          mvn -pl "${modules}" $NATIVE_TEST_MAVEN_OPTS ${{ needs.build-jdk11.outputs.gib_args }}
#          # add the 'simple with spaces' project to the run of 'Misc1' by executing it explicitly
#          # done because there is no good way to pass strings with empty values to the previous command
#          # so this hack is as good as any
#          if [ "$CATEGORY" == "Misc1" ]; then
#            mvn -Dnative -Dquarkus.native.container-build=true -B --settings .github/mvn-settings.xml -pl 'integration-tests/simple with space/' verify ${{ needs.build-jdk11.outputs.gib_args }}
#          fi
#      - name: Prepare failure archive (if maven failed)
#        if: failure()
#        shell: bash
#        run: find . -type d -name '*-reports' -o -wholename '*/build/reports/tests/functionalTest' | tar -czf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: test-reports-native-${{matrix.category}}
#          path: 'test-reports.tgz'
#